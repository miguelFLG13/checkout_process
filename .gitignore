### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log

# Sphinx documentation
docs/_build/

# PyBuilder
target/


### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
media


### Vagrant ###
.vagrant/


### PyCharm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries
# .idea/shelf

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

local_vagrant.py
local.py
apeteat/aws.json
apeteat/.sass-cache
aws.json
apeteat/.sass-cache
admin.py.orig
apeteat/apeteat/static/admin
apeteat/apeteat/static/debug_toolbar
apeteat/apeteat/static/django_extensions
apeteat/apeteat/static/djcelery
apeteat/apeteat/static/fonts
apeteat/apeteat/static/img
apeteat/apeteat/static/rest_framework
_bootstrap.min.css
main.css
main.min.js

apeteat/apeteat/static/scripts/plugins.min.js
apeteat/apeteat/static/scripts/vendor.min.js
apeteat/apeteat/apps/payments/controllers.py
apeteat/apeteat/apps/payments/crypto.py
apeteat/apeteat/apps/payments/forms.py
apeteat/apeteat/apps/payments/services.py
apeteat/apeteat/apps/payments/settings.py
apeteat/node_modules/gulp-gzip/node_modules/gulp-util

### Sass ###
.sass-cache
*.css.map

# Dependency directories
apeteat/node_modules/*.*
*.bin/
bin/
apeteat/node_modules
node_modules


### Node ###
# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules
jspm_packages
apeteat/apeteat/static/V2/css/node_modules
apeteat/apeteat/static/V2/css/bower_components
apeteat/apeteat/templates/main.css
apeteat/apeteat/static/V2/css/main.css

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

develop


# visualcode
.vscode